#version 400 core

in vec3 normal;
in float height;

out vec4 out_Color;

uniform sampler2D sand;
uniform vec3 dirLightDir;
uniform vec3 dirLightColor;
uniform float dirLightIntensity;
uniform float radius;
uniform float amplitude;

uniform vec4 color1;
uniform vec4 color2;
uniform vec4 color3;
uniform vec4 color4;

void main(void) {
	
	float brightness = dot(normal, -dirLightDir) * dirLightIntensity;
	brightness = clamp(brightness, 0.05, 1.0);
	
	vec4 textureColor = color4;
	if(height < radius + amplitude * 0.03) {
		textureColor = color1;
	} else if(height < radius + amplitude * 0.25) {
		textureColor = color2;
	} else if(height < radius + amplitude * 0.6) {
		textureColor = color3;
	}
	
	vec3 diffuse = dirLightColor * brightness;
	out_Color = vec4(diffuse, 1.0) * textureColor;
	
	//out_Color = textureColor;
}